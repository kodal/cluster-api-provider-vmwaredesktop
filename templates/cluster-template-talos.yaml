---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["10.244.0.0/16"]
  controlPlaneRef:
    kind: TalosControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: VDCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: VDCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  controlPlaneEndpoint:
    host: ${CONTROL_PLANE_ENDPOINT_IP}
    port: 6443
---
apiVersion: ipam.cluster.x-k8s.io/v1alpha1
kind: InClusterIPPool
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
spec:
  addresses:
    - ${SUBNET_PREFIX}.10-${SUBNET_PREFIX}.255
  prefix: 24
  gateway: ${SUBNET_PREFIX}.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: VDMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      templateID: ${TALOS_VM_ID}
      network:
        adapters:
          - vmnet: vmnet2
            type: custom
            virtualDev: e1000e
        ethernets:
          - name: eth0
            dhcp4: true
          - name: eth1
            dhcp4: false
            ipamAsNodeIP: true
            ipamRef:
              apiGroup: ipam.cluster.x-k8s.io
              kind: InClusterIPPool
              name: ${CLUSTER_NAME}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: TalosControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  version: ${KUBERNETES_VERSION}
  replicas: ${CONTROL_PLANE_MACHINE_COUNT=1}
  infrastructureTemplate:
    kind: VDMachineTemplate
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    name: ${CLUSTER_NAME}-control-plane
    namespace: ${NAMESPACE}
  controlPlaneConfig:
    controlplane:
      generateType: controlplane
      strategicPatches:
        - |
          machine:
            install:
              image: ${TALOS_IMAGE}
              disk: /dev/sda
            features:
              kubePrism:
                enabled: true
            network: 
              interfaces:
                - interface: eth0
                  dhcp: true
                - interface: eth1
                  dhcp: false
                  routes:
                    - network: ${NODE_SUBNET}
                      gateway: ${SUBNET_PREFIX}.2
                  vip:
                    ip: ${CONTROL_PLANE_ENDPOINT_IP}
              nameservers:
                - 1.1.1.1
                - 8.8.8.8
            kubelet:
              extraArgs:
                provider-id: "{ provider_id }"
              nodeIP:
                validSubnets:
                  - ${NODE_SUBNET}
          cluster:
            allowSchedulingOnControlPlanes: ${CONTROL_PLANE_ALLOW_SCHEDULING=true}
            etcd:
              advertisedSubnets:
                - ${NODE_SUBNET}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-worker
  namespace: ${NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT=0}
  template:
    spec:
      clusterName: ${CLUSTER_NAME}
      version: ${KUBERNETES_VERSION}
      bootstrap:
        configRef:
          kind: TalosConfigTemplate
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          name: ${CLUSTER_NAME}-worker
          namespace: ${NAMESPACE}
      infrastructureRef:
        kind: VDMachineTemplate
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        name: ${CLUSTER_NAME}-worker
        namespace: ${NAMESPACE}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: VDMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-worker
  namespace: ${NAMESPACE}
spec:
  template:
    spec:
      templateID: ${TALOS_VM_ID}
      network:
        adapters:
          - vmnet: vmnet2
            type: custom
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: TalosConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-worker
  namespace: ${NAMESPACE}
spec:
  template:
    spec:
      generateType: worker
      strategicPatches:
        - |
          machine:
            install:
              image: ${TALOS_IMAGE}
              disk: /dev/sda
            network: 
              interfaces:
                - interface: eth0
                  dhcp: true
                - interface: eth1
                  dhcp: false
                  routes:
                    - network: ${NODE_SUBNET}
                      gateway: ${SUBNET_PREFIX}.2
                  vip:
                    ip: ${CONTROL_PLANE_ENDPOINT_IP}
            kubelet:
              extraArgs:
                provider-id: "{ provider_id }"
